services:
  backend:
    container_name: backend
    build:
      context: backend/.
      target: ${NODE_ENV}
    volumes:
      - ./backend/.:/usr/src/app
      - ./backend/node_modules:/usr/src/app/node_modules
    # ports:
    #   - 127.0.0.1:${APPLICATION_PORT}:3000
    env_file:
      - .env
    depends_on:
      - data-microservice

  data-microservice:
    container_name: data-microservice
    build:
      context: data-microservice/.
      target: ${NODE_ENV}
    volumes:
      - ./data-microservice/.:/usr/src/app
      - ./data-microservice/node_modules:/usr/src/app/node_modules
    env_file:
      - .env
    depends_on:
      - redis

  redis:
    container_name: redis
    image: 'redislabs/rejson:latest'
    command: redis-server --requirepass ${REDIS_PASS} --loadmodule /usr/lib/redis/modules/redisearch.so --loadmodule /usr/lib/redis/modules/rejson.so
    restart: always
    volumes:
      - cache:/data

  nginx:
    container_name: nginx
    build:
      context: docker/nginx/.
      target: nginx
    depends_on:
      - backend
    restart: always
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host

volumes:
  cache:
    driver: local
